
import streamlit as st
import json
import google.generativeai as genai
from datetime import datetime

# Function to load Reddit data
def load_reddit_data(json_file):
    with open(json_file, 'r', encoding='utf-8') as file:
        return json.load(file)

# Function to extract Reddit text for summarization
def extract_reddit_text(data):
    extracted_data = []
    for post in data:
        post_content = f"Title: {post['title']}\n"
        post_content += f"Body: {post['selftext']}\n"
        post_content += "Comments:\n"
        for comment in post.get("comments", []):
            if isinstance(comment, dict):
                post_content += f"- {comment['comment_body']} (Score: {comment['comment_score']})\n"
        extracted_data.append(post_content)
    return extracted_data

# Function to generate a summary using Gemini LLM
def generate_summary(extracted_data, context_question, api_key):
    genai.configure(api_key=api_key)
    model = genai.GenerativeModel("models/gemini-1.5-flash")
    prompt = (
        f"The following is data extracted from Reddit. Based on the question below, "
        f"generate a concise and accurate summary and final conclusion on the sentiment of the question based on whether it is positive, negative, or neutral:\n\n"
        f"Question: {context_question}\n\n"
    )
    for data in extracted_data:
        prompt += f"Post:\n{data}\n\n"

    prompt += "Provide a detailed summary:"
    response = model.generate_content(prompt)
    return response.text

# Streamlit UI
st.title("Reddit Data Summarization")
st.write("Upload a JSON file generated by the Reddit Data Extraction tool and get a detailed summary and sentiment analysis.")

# File uploader
uploaded_file = st.file_uploader("Upload Reddit JSON File", type=["json"])
context_question = st.text_input("Enter a context question:")

api_key = st.text_input("Enter your Google API Key for Gemini:", type="password")

if uploaded_file and context_question and api_key:
    with st.spinner("Processing..."):
        reddit_data = load_reddit_data(uploaded_file)
        extracted_data = extract_reddit_text(reddit_data)
        summary = generate_summary(extracted_data, context_question, api_key)
        st.success("Summary generated successfully!")
        
        st.subheader("Summary and Sentiment Analysis")
        st.write(summary)
